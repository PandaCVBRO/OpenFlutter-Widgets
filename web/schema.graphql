type Category implements Node {
  id: ID!
  level: Int!
  name: String!
  parent: Category
}

"""
The connection type for Category.
"""
type CategoryConnection {
  """
  A list of edges.
  """
  edges: [CategoryEdge]

  """
  A list of nodes.
  """
  nodes: [Category]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type CategoryEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Category
}

"""
Autogenerated input type of CreateCategory
"""
input CreateCategoryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String!
  parentId: Int
}

"""
Autogenerated return type of CreateCategory
"""
type CreateCategoryPayload {
  category: Category!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of DeleteCategory
"""
input DeleteCategoryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteCategory
"""
type DeleteCategoryPayload {
  category: Category!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

scalar File

"""
Autogenerated input type of ImportPackage
"""
input ImportPackageInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  url: String!
}

"""
Autogenerated return type of ImportPackage
"""
type ImportPackagePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  package: Package!
}

type Mutation {
  createCategory(input: CreateCategoryInput!): CreateCategoryPayload
  deleteCategory(input: DeleteCategoryInput!): DeleteCategoryPayload
  importPackage(input: ImportPackageInput!): ImportPackagePayload
  updateCategory(input: UpdateCategoryInput!): UpdateCategoryPayload
  updatePackage(input: UpdatePackageInput!): UpdatePackagePayload
}

"""
An object with an ID.
"""
interface Node {
  """
  ID of the object.
  """
  id: ID!
}

type Package implements Node {
  about: String
  health: Int
  id: ID!
  image: File
  license: String
  maintenance: Int
  name: String
  overall: Int
  popularity: Int
  pubUrl: String
  publisahedAt: String
  repositoryUrl: String
  video: File
}

"""
The connection type for Package.
"""
type PackageConnection {
  """
  A list of edges.
  """
  edges: [PackageEdge]

  """
  A list of nodes.
  """
  nodes: [Package]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type PackageEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Package
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node

  """
  Fetches a list of objects given a list of IDs.
  """
  nodes(
    """
    IDs of the objects.
    """
    ids: [ID!]!
  ): [Node]!
  viewer: Viewer
}

"""
Autogenerated input type of UpdateCategory
"""
input UpdateCategoryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  name: String
  parentId: Int
}

"""
Autogenerated return type of UpdateCategory
"""
type UpdateCategoryPayload {
  category: Category!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of UpdatePackage
"""
input UpdatePackageInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  image: File
  video: File
}

"""
Autogenerated return type of UpdatePackage
"""
type UpdatePackagePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  package: Package!
}

type Viewer {
  categories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): CategoryConnection!
  packages(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PackageConnection!
}